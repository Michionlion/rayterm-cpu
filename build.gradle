plugins {
    id 'c'
}

model {
    components {
        rayterm(NativeLibrarySpec)
        rtexplore(NativeExecutableSpec) {
            sources.c.lib library: "rayterm", linkage: link_type
        }
        raytermTest(NativeExecutableSpec) {
            sources {
                c.lib library: "rayterm", linkage: "static"
                c.source.srcDir "src/rayterm/test"
            }
            targetBuildTypes "debug"
        }
    }
    binaries {
        all {
            linker.args "-lncurses"
            cCompiler.args "-std=c99", "-Wall"
            if (buildType == buildTypes.debug) {
                cCompiler.args "-g"
            }
        }
    }
    buildTypes {
        debug
        release
    }
    platforms {
        x64 {
            architecture "x86_64"
        }
    }
    toolChains {
        gcc(Gcc) {
            // Uncomment to use GCC not in PATH
            // path "/usr/bin/gcc"
        }
    }
}

task install(type: Copy) {
    dependsOn 'build'
    from 'build/libs/rayterm/shared/release'
    into "${System.getProperty("user.home")}/${install_location}"
}

task raytracingTest(type: Exec) {
    commandLine "./build/exe/raytermTest/raytermTest", "raytracing"
    mustRunAfter "assemble"
}

task interfaceTest(type: Exec) {
    commandLine "./build/exe/raytermTest/raytermTest", "interface"
    mustRunAfter "assemble"
}

task test {
    dependsOn "assemble"
    dependsOn "raytracingTest"
    dependsOn "interfaceTest"

    mustRunAfter "assemble"
    tasks.findByName('build').dependsOn "test"
}
